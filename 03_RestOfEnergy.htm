<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="generator" content="goxygen" />
  <meta name="author" content="Fotis Sioutas" />
  <meta name="author" content="Giannis Tolios" />
  <meta name="author" content="Giorgos Plessias" />
  <meta name="author" content="Anastasis Giannousakis" />
<title>OPEN PROM –  3. RestOfEnergy module</title>
<link rel="stylesheet" href="ming/style.css">
<script async src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js?config=TeX-AMS_CHTML-full"></script>
<script type="text/x-mathjax-config">
                    MathJax.Hub.Config({
                      CommonHTML: { linebreaks: { automatic: true } },
                      "HTML-CSS": { linebreaks: { automatic: true } },
                             SVG: { linebreaks: { automatic: true } }
                    });
</script>
</head>
<body>
<div class="header">
      <div class="headerimg"><a href="index.htm"><img id="logo" src="images/logo.png" height="100" alt="model logo" /></a></div>
    <div class="headertext">
      <h1 id="mainheadertitle"><a href="https://github.com/e3modelling/OPEN-PROM">OPEN PROM</a></h1>
      <h3>0.1</h3>
      <div class="by">created with <a href="https://github.com/pik-piam/goxygen">goxygen</a> 1.4.6</div>
    </div>
</div>

<div class="pagenav" id="pagenav">
    <div class="dropdown">
   <button class="dropbtn"> 3. RestOfEnergy module
     <i class="fa fa-caret-down"></i>
   </button>
   <div id="mainnav" class="dropdown-content">
   <a href='index.htm'>Overview</a>
   <a href='core.htm'>core</a>
   <a href='01_Transport.htm'> 1. Transport module</a>
   <a href='02_Industry.htm'> 2. Industry module</a>
   <a href='03_RestOfEnergy.htm'> 3. RestOfEnergy module</a>
   <a href='04_PowerGeneration.htm'> 4. PowerGeneration module</a>
   <a href='05_Hydrogen.htm'> 5. Hydrogen module</a>
   <a href='06_CO2.htm'> 6. CO2 module</a>
   <a href='08_Prices.htm'> 8. Prices module</a>
   </div>
  </div>
  <div class="dropdown">
   <button class="dropbtn">Contents
     <i class="fa fa-caret-down"></i>
   </button>
   <div class="dropdown-content">
   <ul>
   <li><a href="#id-03_RestOfEnergy"
   id="toc-id-03_RestOfEnergy">RestOfEnergy module (03_RestOfEnergy)</a>
   <ul>
   <li><a href="#description" id="toc-description">Description</a></li>
   <li><a href="#interfaces" id="toc-interfaces">Interfaces</a>
   <ul>
   <li><a href="#input" id="toc-input">Input</a></li>
   <li><a href="#output" id="toc-output">Output</a></li>
   </ul></li>
   <li><a href="#realizations" id="toc-realizations">Realizations</a>
   <ul>
   <li><a href="#a-legacy" id="toc-a-legacy">(A) legacy</a></li>
   </ul></li>
   <li><a href="#definitions" id="toc-definitions">Definitions</a>
   <ul>
   <li><a href="#objects" id="toc-objects">Objects</a></li>
   <li><a href="#sets" id="toc-sets">Sets</a></li>
   </ul></li>
   <li><a href="#see-also" id="toc-see-also">See Also</a></li>
   <li><a href="#references" id="toc-references">References</a></li>
   </ul></li>
   </ul>
   </div>
  </div>
</div>

<h1 id="id-03_RestOfEnergy">RestOfEnergy module (03_RestOfEnergy)</h1>
<h2 id="description">Description</h2>
<p>This is the RestOfEnergy module.</p>
<h2 id="interfaces">Interfaces</h2>
<figure>
<img src="images/interfaces_RestOfEnergy.png"
style="width:100.0%;height:50.0%" alt="Interfaces to other modules" />
<figcaption aria-hidden="true">Interfaces to other modules</figcaption>
</figure>
<h3 id="input">Input</h3>
<table>
<caption>module inputs (A: legacy)</caption>
<colgroup>
<col style="width: 38%" />
<col style="width: 43%" />
<col style="width: 12%" />
<col style="width: 5%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;"> </th>
<th style="text-align: center;">Description</th>
<th style="text-align: center;">Unit</th>
<th style="text-align: center;">A</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">VMVConsFuel<br />
(allCy, DSBS, EF, YTIME)</td>
<td style="text-align: center;">Consumption of fuels in each demand
subsector, excluding heat from heatpumps</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VMVDemFinEneTranspPerFuel<br />
(allCy, TRANSE, EF, YTIME)</td>
<td style="text-align: center;">Final energy demand in transport
subsectors per fuel</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VMVDemTotH2<br />
(allCy, YTIME)</td>
<td style="text-align: center;">Hydrogen production requirement in Mtoe
for meeting final demand</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VMVProdElec<br />
(allCy, PGALL, YTIME)</td>
<td style="text-align: center;">Electricity production</td>
<td style="text-align: center;"><span
class="math inline">\(TWh\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VMVProdH2<br />
(allCy, H2TECH, YTIME)</td>
<td style="text-align: center;">Hydrogen Production by technology in
Mtoe</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
</tbody>
</table>
<h3 id="output">Output</h3>
<table style="width:88%;">
<caption>module outputs</caption>
<colgroup>
<col style="width: 31%" />
<col style="width: 43%" />
<col style="width: 12%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;"> </th>
<th style="text-align: center;">Description</th>
<th style="text-align: center;">Unit</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">VMVConsFiEneSec<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Final consumption in energy sector</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
</tr>
<tr class="even">
<td style="text-align: center;">VMVConsFinEneCountry<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Total final energy consumnption</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: center;">VMVConsFinNonEne<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Final non energy consumption</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
</tr>
<tr class="even">
<td style="text-align: center;">VMVImpNetEneBrnch<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Net Imports</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
</tr>
<tr class="odd">
<td style="text-align: center;">VMVLossesDistr<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Distribution losses</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
</tr>
</tbody>
</table>
<h2 id="realizations">Realizations</h2>
<h3 id="a-legacy">(A) legacy</h3>
<p>This is the legacy realization of the RestOfEnergy module.</p>
<pre><code>Equations</code></pre>
<p>*** REST OF ENERGY BALANCE SECTORS EQUATIONS</p>
<pre><code>QOutTransfDhp(allCy,EFS,YTIME)                             &quot;Compute the transformation output from district heating plants&quot;
QCapRef(allCy,YTIME)                                       &quot;Compute refineries capacity&quot;
QOutTransfRefSpec(allCy,EFS,YTIME)                         &quot;Compute the transformation output from refineries&quot;
QInputTransfRef(allCy,EFS,YTIME)                           &quot;Compute the transformation input to refineries&quot;
QOutTransfNuclear(allCy,EFS,YTIME)                         &quot;Compute transformation output from nuclear plants&quot;
QInpTransfNuclear(allCy,EFS,YTIME)                         &quot;Compute transformation input to nuclear plants&quot;
QOutTransfTherm(allCy,EFS,YTIME)                           &quot;Compute transformation output from thermal power plants&quot;
QInpTotTransf(allCy,EFS,YTIME)                             &quot;Compute total transformation input&quot;
QOutTotTransf(allCy,EFS,YTIME)                             &quot;Compute total transformation output&quot;
QTransfers(allCy,EFS,YTIME)                                &quot;Compute transfers&quot;
QConsGrssInlNotEneBranch(allCy,EFS,YTIME)                  &quot;Compute gross inland consumption not including consumption of energy branch&quot;
QConsGrssInl(allCy,EFS,YTIME)                              &quot;Compute gross inland consumption&quot;
QProdPrimary(allCy,EFS,YTIME)                              &quot;Compute primary production&quot;
QExp(allCy,EFS,YTIME)                                      &quot;Compute fake exports&quot;
QImp(allCy,EFS,YTIME)                                      &quot;Compute fake imports&quot;</code></pre>
<p><strong>Interdependent Equations</strong></p>
<pre><code>Q03ImpNetEneBrnch(allCy,EFS,YTIME)                         &quot;Compute net imports&quot;
Q03ConsFiEneSec(allCy,EFS,YTIME)                           &quot;Compute energy branch final consumption&quot;
Q03InpTransfTherm(allCy,EFS,YTIME)                         &quot;Compute transformation input to power plants&quot;   
Q03TransfInputDHPlants(allCy,EFS,YTIME)                    &quot;Compute the transformation input to distrcit heating plants&quot;
Q03ConsFinEneCountry(allCy,EFS,YTIME)                      &quot;Compute total final energy consumption&quot;
Q03ConsFinNonEne(allCy,EFS,YTIME)                          &quot;Compute final non-energy consumption&quot;
Q03LossesDistr(allCy,EFS,YTIME)                            &quot;Compute distribution losses&quot;
;
Variables</code></pre>
<p>*** REST OF ENERGY BALANCE SECTORS VARIABLES</p>
<pre><code>VOutTransfDhp(allCy,EFS,YTIME)                             &quot;Transformation output from District Heating Plants (Mtoe)&quot;
VCapRef(allCy,YTIME)                                       &quot;Refineries capacity (Million barrels/day)&quot;
VOutTransfRefSpec(allCy,EFS,YTIME)                         &quot;Transformation output from refineries (Mtoe)&quot;
VInputTransfRef(allCy,EFS,YTIME)                           &quot;Transformation input to refineries (Mtoe)&quot;
VOutTransfNuclear(allCy,EFS,YTIME)                         &quot;Transformation output from nuclear plants (Mtoe)&quot;
VInpTransfNuclear(allCy,EFS,YTIME)                         &quot;Transformation input to nuclear plants (Mtoe)&quot;
VOutTransfTherm(allCy,EFS,YTIME)                           &quot;Transformation output from thermal power stations (Mtoe)&quot;
VInpTotTransf(allCy,EFS,YTIME)                             &quot;Total transformation input (Mtoe)&quot;
VOutTotTransf(allCy,EFS,YTIME)                             &quot;Total transformation output (Mtoe)&quot;
VTransfers(allCy,EFS,YTIME)                                &quot;Transfers (Mtoe)&quot;
VConsGrssInlNotEneBranch(allCy,EFS,YTIME)                  &quot;Gross Inland Consumption not including consumption of energy branch (Mtoe)&quot;
VConsGrssInl(allCy,EFS,YTIME)                              &quot;Gross Inland Consumption (Mtoe)&quot;
VProdPrimary(allCy,EFS,YTIME)                              &quot;Primary Production (Mtoe)&quot;
VExp(allCy,EFS,YTIME)                                      &quot;Exports fake (Mtoe)&quot;
VImp(allCy,EFS,YTIME)                                      &quot;Fake Imports for all fuels except natural gas (Mtoe)&quot;</code></pre>
<p><strong>Interdependent Variables</strong></p>
<pre><code>VMVImpNetEneBrnch(allCy,EFS,YTIME)                         &quot;Net Imports (Mtoe)&quot;
VMVConsFiEneSec(allCy,EFS,YTIME)                           &quot;Final consumption in energy sector (Mtoe)&quot;
VMVInpTransfTherm(allCy,EFS,YTIME)                         &quot;Transformation input to thermal power plants (Mtoe)&quot;
VMVTransfInputDHPlants(allCy,EFS,YTIME)                    &quot;Transformation input to District Heating Plants (Mtoe)&quot;
VMVConsFinEneCountry(allCy,EF,YTIME)                       &quot;Total final energy consumnption (Mtoe)&quot;
VMVConsFinNonEne(allCy,EFS,YTIME)                          &quot;Final non energy consumption (Mtoe)&quot;
VMVLossesDistr(allCy,EFS,YTIME)                            &quot;Distribution losses (Mtoe)&quot;
;</code></pre>
<p>GENERAL INFORMATION Equation format: “typical useful energy demand
equation” The main explanatory variables (drivers) are activity
indicators (economic activity) and corresponding energy costs. The type
of “demand” is computed based on its past value, the ratio of the
current and past activity indicators (with the corresponding
elasticity), and the ratio of lagged energy costs (with the
corresponding elasticities). This type of equation captures both short
term and long term reactions to energy costs. * REST OF ENERGY BALANCE
SECTORS The equation computes the total final energy consumption in
million tonnes of oil equivalent for each country , energy form sector,
and time period. The total final energy consumption is calculated as the
sum of final energy consumption in the Industry and Tertiary sectors and
the sum of final energy demand in all transport subsectors. The
consumption is determined by the relevant link between model subsectors
and fuels.</p>
<pre><code>Q03ConsFinEneCountry(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VMVConsFinEneCountry(allCy,EFS,YTIME)
             =E=
         sum(INDDOM,
             sum(EF$(EFtoEFS(EF,EFS) $SECTTECH(INDDOM,EF) ), VMVConsFuel(allCy,INDDOM,EF,YTIME)))
         +
         sum(TRANSE,
             sum(EF$(EFtoEFS(EF,EFS) $SECTTECH(TRANSE,EF)), VMVDemFinEneTranspPerFuel(allCy,TRANSE,EF,YTIME)))
         +
         sum(EF$(sameas(EF, &quot;H2&quot;) AND EFtoEFS(EF,EFS)), VMVDemTotH2(allCy,YTIME)) !! Here hydrogen is included as a part of the energy consumption.
        ;</code></pre>
<p>The equation computes the total final energy consumption in million
tonnes of oil equivalent for all countries at a specific time period.
This is achieved by summing the final energy consumption for each energy
form sector across all countries.</p>
<pre><code>$ontext
qConsTotFinEne(YTIME)$(TIME(YTIME))..
         vConsTotFinEne(YTIME) =E= sum((allCy,EFS), VMVConsFinEneCountry(allCy,EFS,YTIME) );     
$offtext</code></pre>
<p>The equation computes the final non-energy consumption in million
tonnes of oil equivalent for a given energy form sector. The calculation
involves summing the consumption of fuels in each non-energy and bunkers
demand subsector based on the corresponding fuel aggregation for the
supply side. This process is performed for each time period.</p>
<pre><code>Q03ConsFinNonEne(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VMVConsFinNonEne(allCy,EFS,YTIME)
             =E=
         sum(NENSE$(not sameas(&quot;BU&quot;,NENSE)),
             sum(EF$(EFtoEFS(EF,EFS) $SECTTECH(NENSE,EF) ), VMVConsFuel(allCy,NENSE,EF,YTIME)));  </code></pre>
<p>The equation computes the distribution losses in million tonnes of
oil equivalent for a given energy form sector. The losses are determined
by the rate of losses over available for final consumption multiplied by
the sum of total final energy consumption and final non-energy
consumption. This calculation is performed for each time period. Please
note that distribution losses are not considered for the hydrogen
sector.</p>
<pre><code>Q03LossesDistr(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VMVLossesDistr(allCy,EFS,YTIME)
             =E=
         (iRateLossesFinCons(allCy,EFS,YTIME) * (VMVConsFinEneCountry(allCy,EFS,YTIME) + VMVConsFinNonEne(allCy,EFS,YTIME)))$(not H2EF(EFS))
         +
         (  VMVDemTotH2(allCy,YTIME) - sum(SBS$H2SBS(SBS), VDemSecH2(allCy,SBS,YTIME)))$H2EF(EFS);  </code></pre>
<p>The equation calculates the transformation output from district
heating plants . This transformation output is determined by summing
over different demand sectors and district heating systems that
correspond to the specified energy form set. The equation then sums over
these district heating systems and calculates the consumption of fuels
in each of these sectors. The resulting value represents the
transformation output from district heating plants in million tonnes of
oil equivalent.</p>
<pre><code>QOutTransfDhp(allCy,STEAM,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VOutTransfDhp(allCy,STEAM,YTIME)
             =E=
         sum(DOMSE,
             sum(DH$(EFtoEFS(DH,STEAM) $SECTTECH(DOMSE,DH)), VMVConsFuel(allCy,DOMSE,DH,YTIME)));</code></pre>
<p>The equation calculates the transformation input to district heating
plants. This transformation input is determined by summing over
different district heating systems that correspond to the specified
energy form set . The equation then sums over different demand sectors
within each district heating system and calculates the consumption of
fuels in each of these sectors, taking into account the efficiency of
district heating plants. The resulting value represents the
transformation input to district heating plants in million tonnes of oil
equivalent.</p>
<pre><code>Q03TransfInputDHPlants(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VMVTransfInputDHPlants(allCy,EFS,YTIME)
             =E=
         sum(DH$DHtoEF(DH,EFS),
             sum(DOMSE$SECTTECH(DOMSE,DH),VMVConsFuel(allCy,DOMSE,DH,YTIME)) / iEffDHPlants(allCy,EFS,YTIME));</code></pre>
<p>The equation calculates the refineries’ capacity for a given scenario
and year. The calculation is based on a residual factor, the previous
year’s capacity, and a production scaling factor that takes into account
the historical consumption trends for different energy forms. The
scaling factor is influenced by the base year and the production scaling
parameter. The result represents the refineries’ capacity in million
barrels per day (Million Barrels/day).</p>
<pre><code>QCapRef(allCy,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VCapRef(allCy,YTIME)
             =E=
         [
         iResRefCapacity(allCy,YTIME) * VCapRef(allCy,YTIME-1)
         *
         (1$(ord(YTIME) le 10) +
         (prod(rc,
         (sum(EFS$EFtoEFA(EFS,&quot;LQD&quot;),VMVConsFinEneCountry(allCy,EFS,YTIME-(ord(rc)+1)))/sum(EFS$EFtoEFA(EFS,&quot;LQD&quot;),VMVConsFinEneCountry(allCy,EFS,YTIME-(ord(rc)+2))))**(0.5/(ord(rc)+1)))
         )
         $(ord(YTIME) gt 10)
         )     ] $iRefCapacity(allCy,&quot;%fStartHorizon%&quot;)+0;</code></pre>
<p>The equation calculates the transformation output from refineries for
a specific energy form in a given scenario and year. The output is
computed based on a residual factor, the previous year’s output, and the
change in refineries’ capacity. The calculation includes considerations
for the base year and adjusts the result accordingly. The result
represents the transformation output from refineries for the specified
energy form in million tons of oil equivalent.</p>
<pre><code>QOutTransfRefSpec(allCy,EFS,YTIME)$(TIME(YTIME) $EFtoEFA(EFS,&quot;LQD&quot;) $runCy(allCy))..
         VOutTransfRefSpec(allCy,EFS,YTIME)
             =E=
         [
         iResTransfOutputRefineries(allCy,EFS,YTIME) * VOutTransfRefSpec(allCy,EFS,YTIME-1)
         * (VCapRef(allCy,YTIME)/VCapRef(allCy,YTIME-1))**0.3
         * (
             1$(TFIRST(YTIME-1) or TFIRST(YTIME-2))
             +
             (
                sum(EF$EFtoEFA(EF,&quot;LQD&quot;),VMVConsFinEneCountry(allCy,EF,YTIME-1))/sum(EF$EFtoEFA(EF,&quot;LQD&quot;),VMVConsFinEneCountry(allCy,EF,YTIME-2))
             )$(not (TFIRST(YTIME-1) or TFIRST(YTIME-2)))
           )**(0.7)  ]$iRefCapacity(allCy,&quot;%fStartHorizon%&quot;)+0; </code></pre>
<p>The equation calculates the transformation input to refineries for
the energy form Crude Oil in a specific scenario and year. The input is
computed based on the previous year’s input to refineries, multiplied by
the ratio of the transformation output from refineries for the given
energy form and year to the output in the previous year. This
calculation is conditional on the refineries’ capacity being active in
the specified starting horizon.The result represents the transformation
input to refineries for crude oil in million tons of oil equivalent.</p>
<pre><code>QInputTransfRef(allCy,&quot;CRO&quot;,YTIME)$(TIME(YTIME) $runCy(allCy))..
         VInputTransfRef(allCy,&quot;CRO&quot;,YTIME)
             =E=
         [
         VInputTransfRef(allCy,&quot;CRO&quot;,YTIME-1) *
         sum(EFS$EFtoEFA(EFS,&quot;LQD&quot;), VOutTransfRefSpec(allCy,EFS,YTIME)) /
         sum(EFS$EFtoEFA(EFS,&quot;LQD&quot;), VOutTransfRefSpec(allCy,EFS,YTIME-1))  ]$iRefCapacity(allCy,&quot;%fStartHorizon%&quot;)+0;                   </code></pre>
<p>The equation calculates the transformation output from nuclear plants
for electricity production in a specific scenario and year. The output
is computed as the sum of electricity production from all nuclear power
plants in the given scenario and year, multiplied by the conversion
factor from terawatt-hours to million tons of oil equivalent. The result
represents the transformation output from nuclear plants for electricity
production in million tons of oil equivalent.</p>
<pre><code>QOutTransfNuclear(allCy,&quot;ELC&quot;,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VOutTransfNuclear(allCy,&quot;ELC&quot;,YTIME) =E=SUM(PGNUCL,VMVProdElec(allCy,PGNUCL,YTIME))*sTWhToMtoe;</code></pre>
<p>The equation computes the transformation input to nuclear plants for
a specific scenario and year. The input is calculated based on the sum
of electricity production from all nuclear power plants in the given
scenario and year, divided by the plant efficiency and multiplied by the
conversion factor from terawatt-hours to million tons of oil equivalent
(sTWhToMtoe). The result represents the transformation input to nuclear
plants in million tons of oil equivalent.</p>
<pre><code>QInpTransfNuclear(allCy,&quot;NUC&quot;,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
        VInpTransfNuclear(allCy,&quot;NUC&quot;,YTIME) =E=SUM(PGNUCL,VMVProdElec(allCy,PGNUCL,YTIME)/iPlantEffByType(allCy,PGNUCL,YTIME))*sTWhToMtoe;</code></pre>
<p>The equation computes the transformation input to thermal power
plants for a specific power generation form in a given scenario and
year. The input is calculated based on the following conditions: For
conventional power plants that are not geothermal or nuclear, the
transformation input is determined by the electricity production from
the respective power plant multiplied by the conversion factor from
terawatt-hours to million tons of oil equivalent (sTWhToMtoe), divided
by the plant efficiency.For geothermal power plants, the transformation
input is based on the electricity production from the geothermal plant
multiplied by the conversion factor.For combined heat and power plants ,
the input is calculated as the sum of the consumption of fuels in
various demand subsectors and the electricity production from the CHP
plant . This sum is then divided by a factor based on the year to
account for variations over time.The result represents the
transformation input to thermal power plants in million tons of oil
equivalent.</p>
<pre><code>Q03InpTransfTherm(allCy,PGEF,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VMVInpTransfTherm(allCy,PGEF,YTIME)
             =E=
        sum(PGALL$(PGALLtoEF(PGALL,PGEF)$((not PGGEO(PGALL)) $(not PGNUCL(PGALL)))),
             VMVProdElec(allCy,PGALL,YTIME) * sTWhToMtoe /  iPlantEffByType(allCy,PGALL,YTIME))
        +
        sum(PGALL$(PGALLtoEF(PGALL,PGEF)$PGGEO(PGALL)),
             VMVProdElec(allCy,PGALL,YTIME) * sTWhToMtoe / 0.15) 
        +
        sum(CHP$CHPtoEF(CHP,PGEF),  sum(INDDOM,VMVConsFuel(allCy,INDDOM,CHP,YTIME))+sTWhToMtoe*VProdElecCHP(allCy,CHP,YTIME))/(0.8+0.1*(ord(YTIME)-10)/32);</code></pre>
<p>The equation calculates the transformation output from thermal power
stations for a specific energy branch in a given scenario and year. The
result is computed based on the following conditions: If the energy
branch is related to electricity, the transformation output from thermal
power stations is the sum of electricity production from conventional
power plants and combined heat and power plants. The production values
are converted from terawatt-hours (TWh) to million tons of oil
equivalent. If the energy branch is associated with steam, the
transformation output is determined by the sum of the consumption of
fuels in various demand subsectors, the rate of energy branch
consumption over total transformation output, and losses. The result
represents the transformation output from thermal power stations in
million tons of oil equivalent.</p>
<pre><code>QOutTransfTherm(allCy,TOCTEF,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VOutTransfTherm(allCy,TOCTEF,YTIME)
             =E=
        (
             sum(PGALL$(not PGNUCL(PGALL)),VMVProdElec(allCy,PGALL,YTIME)) * sTWhToMtoe
             +
             sum(CHP,VProdElecCHP(allCy,CHP,YTIME)*sTWhToMtoe)
         )$ELCEF(TOCTEF)
        +
        (                                                                                                         
          sum(INDDOM,
          sum(CHP$SECTTECH(INDDOM,CHP), VMVConsFuel(allCy,INDDOM,CHP,YTIME)))+
          iRateEneBranCons(allCy,TOCTEF,YTIME)*(VMVConsFinEneCountry(allCy,TOCTEF,YTIME) + VMVConsFinNonEne(allCy,TOCTEF,YTIME) + VMVLossesDistr(allCy,TOCTEF,YTIME)) + 
          VMVLossesDistr(allCy,TOCTEF,YTIME)                                                                                    
         )$STEAM(TOCTEF); 
            </code></pre>
<p>The equation calculates the total transformation input for a specific
energy branch in a given scenario and year. The result is obtained by
summing the transformation inputs from different sources, including
thermal power plants, District Heating Plants, nuclear plants, patent
fuel and briquetting plants, and refineries. In the case where the
energy branch is “OGS” (Other Gas), the total transformation input is
calculated as the difference between the total transformation output and
various consumption and loss components. The outcome represents the
total transformation input in million tons of oil equivalent.</p>
<pre><code>QInpTotTransf(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VInpTotTransf(allCy,EFS,YTIME)
                 =E=
        (
            VMVInpTransfTherm(allCy,EFS,YTIME) + VMVTransfInputDHPlants(allCy,EFS,YTIME) + VInpTransfNuclear(allCy,EFS,YTIME) +
             VInputTransfRef(allCy,EFS,YTIME)     !!$H2PRODEF(EFS)
        )$(not sameas(EFS,&quot;OGS&quot;))
        +
        (
          VOutTotTransf(allCy,EFS,YTIME) - VMVConsFinEneCountry(allCy,EFS,YTIME) - VMVConsFinNonEne(allCy,EFS,YTIME) - iRateEneBranCons(allCy,EFS,YTIME)*
          VOutTotTransf(allCy,EFS,YTIME) - VMVLossesDistr(allCy,EFS,YTIME)
        )$sameas(EFS,&quot;OGS&quot;);            </code></pre>
<p>The equation calculates the total transformation output for a
specific energy branch in a given scenario and year. The result is
obtained by summing the transformation outputs from different sources,
including thermal power stations, District Heating Plants, nuclear
plants, patent fuel and briquetting plants, coke-oven plants, blast
furnace plants, and gas works as well as refineries. The outcome
represents the total transformation output in million tons of oil
equivalent.</p>
<pre><code>QOutTotTransf(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VOutTotTransf(allCy,EFS,YTIME)
                 =E=
         VOutTransfTherm(allCy,EFS,YTIME) + VOutTransfDhp(allCy,EFS,YTIME) + VOutTransfNuclear(allCy,EFS,YTIME) +
         VOutTransfRefSpec(allCy,EFS,YTIME) +  sum(H2TECH$(sameas(EFS, &quot;H2F&quot;)), VMVProdH2(allCy, H2TECH, YTIME));  !! Hydrogen production for EFS = &quot;H2F&quot; + TONEW(allCy,EFS,YTIME)</code></pre>
<p>The equation calculates the transfers of a specific energy branch in
a given scenario and year. The result is computed based on a complex
formula that involves the previous year’s transfers, the residual for
feedstocks in transfers, and various conditions. In particular, the
equation includes terms related to feedstock transfers, residual
feedstock transfers, and specific conditions for the energy branch “CRO”
(crop residues). The outcome represents the transfers in million tons of
oil equivalent.</p>
<pre><code>QTransfers(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VTransfers(allCy,EFS,YTIME) =E=
         (( (VTransfers(allCy,EFS,YTIME-1)*VMVConsFinEneCountry(allCy,EFS,YTIME)/VMVConsFinEneCountry(allCy,EFS,YTIME-1))$EFTOEFA(EFS,&quot;LQD&quot;)+
          (
                 VTransfers(allCy,&quot;CRO&quot;,YTIME-1)*SUM(EFS2$EFTOEFA(EFS2,&quot;LQD&quot;),VTransfers(allCy,EFS2,YTIME))/
                 SUM(EFS2$EFTOEFA(EFS2,&quot;LQD&quot;),VTransfers(allCy,EFS2,YTIME-1)))$sameas(EFS,&quot;CRO&quot;)   )$(iFeedTransfr(allCy,EFS,&quot;%fStartHorizon%&quot;))$(NOT sameas(&quot;OLQ&quot;,EFS)) 
);         </code></pre>
<p>The equation calculates the gross inland consumption excluding the
consumption of a specific energy branch in a given scenario and year.
The result is computed by summing various components, including total
final energy consumption, final non-energy consumption, total
transformation input and output, distribution losses, and transfers. The
outcome represents the gross inland consumption excluding the
consumption of the specified energy branch in million tons of oil
equivalent.</p>
<pre><code> QConsGrssInlNotEneBranch(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VConsGrssInlNotEneBranch(allCy,EFS,YTIME)
                 =E=
         VMVConsFinEneCountry(allCy,EFS,YTIME) + VMVConsFinNonEne(allCy,EFS,YTIME) + VInpTotTransf(allCy,EFS,YTIME) - VOutTotTransf(allCy,EFS,YTIME) + VMVLossesDistr(allCy,EFS,YTIME) - 
         VTransfers(allCy,EFS,YTIME); </code></pre>
<p>The equation calculates the gross inland consumptionfor a specific
energy branch in a given scenario and year. This is computed by summing
various components, including total final energy consumption, final
consumption in the energy sector, final non-energy consumption, total
transformation input and output, distribution losses, and transfers. The
result represents the gross inland consumption in million tons of oil
equivalent.</p>
<pre><code>QConsGrssInl(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VConsGrssInl(allCy,EFS,YTIME)
                 =E=
         VMVConsFinEneCountry(allCy,EFS,YTIME) + VMVConsFiEneSec(allCy,EFS,YTIME) + VMVConsFinNonEne(allCy,EFS,YTIME) + VInpTotTransf(allCy,EFS,YTIME) - VOutTotTransf(allCy,EFS,YTIME) +
          VMVLossesDistr(allCy,EFS,YTIME) - VTransfers(allCy,EFS,YTIME);  </code></pre>
<p>The equation calculates the primary production for a specific primary
production definition in a given scenario and year. The computation
involves different scenarios based on the type of primary production
definition: For primary production definitions the primary production is
directly proportional to the rate of primary production in total primary
needs, and it depends on gross inland consumption not including the
consumption of the energy branch. For Natural Gas primary production,
the calculation considers a specific formula involving the rate of
primary production in total primary needs, residuals for hard coal,
natural gas, and oil primary production, the elasticity related to gross
inland consumption for natural gas, and other factors. Additionally,
there is a lag effect with coefficients for primary oil production. For
Crude Oil primary production, the computation includes the rate of
primary production in total primary needs, residuals for hard coal,
natural gas, and oil primary production, the fuel primary production,
and a product term involving the polynomial distribution lag
coefficients for primary oil production. The result represents the
primary production in million tons of oil equivalent.</p>
<pre><code>QProdPrimary(allCy,PPRODEF,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VProdPrimary(allCy,PPRODEF,YTIME)
                 =E=  [
         (
             iRatePriProTotPriNeeds(allCy,PPRODEF,YTIME) * (VConsGrssInlNotEneBranch(allCy,PPRODEF,YTIME) +  VMVConsFiEneSec(allCy,PPRODEF,YTIME))
         )$(not (sameas(PPRODEF,&quot;CRO&quot;)or sameas(PPRODEF,&quot;NGS&quot;)))
         +
         (
             iResHcNgOilPrProd(allCy,PPRODEF,YTIME) * VProdPrimary(allCy,PPRODEF,YTIME-1) *
             (VConsGrssInlNotEneBranch(allCy,PPRODEF,YTIME)/VConsGrssInlNotEneBranch(allCy,PPRODEF,YTIME-1))**iNatGasPriProElst(allCy)
         )$(sameas(PPRODEF,&quot;NGS&quot;) )
         +(
           iResHcNgOilPrProd(allCy,PPRODEF,YTIME) *  iFuelPriPro(allCy,PPRODEF,YTIME) *
           prod(kpdl$(ord(kpdl) lt 5),
                         (iPriceFuelsInt(&quot;WCRO&quot;,YTIME-(ord(kpdl)+1))/iPriceFuelsIntBase(&quot;WCRO&quot;,YTIME-(ord(kpdl)+1)))
                         **(0.2*iPolDstrbtnLagCoeffPriOilPr(kpdl)))
         )$sameas(PPRODEF,&quot;CRO&quot;)   ]$iRatePriProTotPriNeeds(allCy,PPRODEF,YTIME);   </code></pre>
<p>The equation calculates the fake exports for a specific energy branch
in a given scenario and year. The computation is based on the fuel
exports for the corresponding energy branch. The result represents the
fake exports in million tons of oil equivalent.</p>
<pre><code>QExp(allCy,EFS,YTIME)$(TIME(YTIME) $IMPEF(EFS) $runCy(allCy))..
         VExp(allCy,EFS,YTIME)
                 =E=
         (
                 iFuelExprts(allCy,EFS,YTIME)
         );</code></pre>
<p>The equation computes the fake imports for a specific energy branch
in a given scenario and year. The calculation is based on different
conditions for various energy branches, such as electricity, crude oil,
and natural gas. The equation involves gross inland consumption, fake
exports, consumption of fuels in demand subsectors, electricity imports,
and other factors. The result represents the fake imports in million
tons of oil equivalent for all fuels except natural gas.</p>
<pre><code>QImp(allCy,EFS,YTIME)$(TIME(YTIME) $IMPEF(EFS) $runCy(allCy))..
         VImp(allCy,EFS,YTIME)
                 =E=
         (
            iRatioImpFinElecDem(allCy,YTIME) * (VMVConsFinEneCountry(allCy,EFS,YTIME) + VMVConsFinNonEne(allCy,EFS,YTIME)) + VExp(allCy,EFS,YTIME)
         + iElecImp(allCy,YTIME)
         )$ELCEF(EFS)
         +
         (
            VConsGrssInl(allCy,EFS,YTIME)+ VExp(allCy,EFS,YTIME) + VMVConsFuel(allCy,&quot;BU&quot;,EFS,YTIME)$SECTTECH(&quot;BU&quot;,EFS)
            - VProdPrimary(allCy,EFS,YTIME)
         )$(sameas(EFS,&quot;CRO&quot;))
         +
         (
            VConsGrssInl(allCy,EFS,YTIME)+ VExp(allCy,EFS,YTIME) + VMVConsFuel(allCy,&quot;BU&quot;,EFS,YTIME)$SECTTECH(&quot;BU&quot;,EFS)
            - VProdPrimary(allCy,EFS,YTIME)
         )$(sameas(EFS,&quot;NGS&quot;))
         +
         (
            (1-iRatePriProTotPriNeeds(allCy,EFS,YTIME)) *
            (VConsGrssInl(allCy,EFS,YTIME) + VExp(allCy,EFS,YTIME) + VMVConsFuel(allCy,&quot;BU&quot;,EFS,YTIME)$SECTTECH(&quot;BU&quot;,EFS) )
         )$(not (ELCEF(EFS) or sameas(EFS,&quot;NGS&quot;) or sameas(EFS,&quot;CRO&quot;)));</code></pre>
<p>The equation computes the net imports for a specific energy branch in
a given scenario and year. It subtracts the fake exports from the fake
imports for all fuels except natural gas . The result represents the net
imports in million tons of oil equivalent.</p>
<pre><code>Q03ImpNetEneBrnch(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VMVImpNetEneBrnch(allCy,EFS,YTIME)
                 =E=
         VImp(allCy,EFS,YTIME) - VExp(allCy,EFS,YTIME);
                               </code></pre>
<p>The equation calculates the final energy consumption in the energy
sector. It considers the rate of energy branch consumption over the
total transformation output. The final consumption is determined based
on the total transformation output and primary production for energy
branches, excluding Oil, Coal, and Gas. The result, VMVConsFiEneSec,
represents the final consumption in million tons of oil equivalent for
the specified scenario and year.</p>
<pre><code>Q03ConsFiEneSec(allCy,EFS,YTIME)$(TIME(YTIME)$(runCy(allCy)))..
         VMVConsFiEneSec(allCy,EFS,YTIME)
                 =E=
         iRateEneBranCons(allCy,EFS,YTIME) *
         (
           (
              VOutTotTransf(allCy,EFS,YTIME) +
              VProdPrimary(allCy,EFS,YTIME)$(sameas(EFS,&quot;CRO&quot;) or sameas(EFS,&quot;NGS&quot;))
            )$(not TOCTEF(EFS))
            +
            (
              VMVConsFinEneCountry(allCy,EFS,YTIME) + VMVConsFinNonEne(allCy,EFS,YTIME) + VMVLossesDistr(allCy,EFS,YTIME)
            )$TOCTEF(EFS)
         );                              </code></pre>
<pre><code>table iSuppRefCapacity(allCy,SUPOTH,YTIME)            &quot;Supplementary Parameter for the residual in refineries Capacity (1)&quot;
$ondelim
$include &quot;./iSuppRefCapacity.csv&quot;
$offdelim
;
table iDataTransfOutputRef(allCy,EF,YTIME)      &quot;Data for Other transformation output  (Mtoe)&quot;
$ondelim
$include&quot;./iDataTransfOutputRef.csv&quot;
$offdelim
;
table iDataGrossInlCons(allCy,EF,YTIME)  &quot;Data for Gross Inland Conusmption (Mtoe)&quot;
$ondelim
$include&quot;./iDataGrossInlCons.csv&quot;
$offdelim
;
table iDataConsEneBranch(allCy,EF,YTIME)     &quot;Data for Consumption of Energy Branch (Mtoe)&quot;
$ondelim
$include&quot;./iDataConsEneBranch.csv&quot;
$offdelim
;
table iDataTotTransfInputRef(allCy,EF,YTIME)     &quot;Total Transformation Input in Refineries (Mtoe)&quot;
$ondelim
$include&quot;./iDataTotTransfInputRef.csv&quot;
$offdelim
;
table iSuppTransfers(allCy,EFS,YTIME)                   &quot;Supplementary Parameter for Transfers (Mtoe)&quot;
$ondelim
$include&quot;./iSuppTransfers.csv&quot;
$offdelim
;
table iSuppPrimProd(allCy,PPRODEF,YTIME)              &quot;Supplementary Parameter for Primary Production (Mtoe)&quot;
$ondelim
$include&quot;./iSuppPrimProd.csv&quot;
$offdelim
;
table iInpTransfTherm(allCy,EFS,YTIME) &quot;Historic data of VMVInpTransfTherm (Transformation input to thermal power plants) (Mtoe)&quot;
$ondelim
$include&quot;./iInpTransfTherm.csv&quot;
$offdelim
;
table iSupRateEneBranCons(allCy,EF,YTIME)             &quot;Rate of Energy Branch Consumption over total transformation output of iRateEneBranCons (1)&quot;
$ondelim
$include&quot;./iSupRateEneBranCons.csv&quot;
$offdelim
;
table iSuppRatePrimProd(allCy,EF,YTIME)               &quot;Supplementary Parameter for iRatePrimProd (1)&quot;   
$ondelim
$include&quot;./iSuppRatePrimProd.csv&quot;
$offdelim
;
table iPriceFuelsInt(WEF,YTIME)                &quot;International Fuel Prices ($2015/toe)&quot;
$ondelim
$include&quot;./iPriceFuelsInt.csv&quot;
$offdelim
;
table iElcNetImpShare(allCy,SUPOTH,YTIME)             &quot;Ratio of electricity imports in total final demand (1)&quot;
$ondelim
$include &quot;./iElcNetImpShare.csv&quot;
$offdelim
;
parameter iNatGasPriProElst(allCy)            &quot;Natural Gas primary production elasticity related to gross inland consumption (1)&quot; /
$ondelim
$include &quot;./iNatGasPriProElst.csv&quot;
$offdelim
/;
parameter iPolDstrbtnLagCoeffPriOilPr(kpdl)   &quot;Polynomial Distribution Lag Coefficients for primary oil production (1)&quot;/
a1 1.666706504,
a2 1.333269594,
a3 1.000071707,
a4 0.666634797,
a5 0.33343691 /;
Parameters
iParDHEfficiency(PGEFS,YTIME)                     &quot;Parameter of  district heating Efficiency for all years (1)&quot;
iSupTrnasfOutputRefineries(allCy,EF,YTIME)        &quot;Supplementary parameter for the transformation output from refineries (Mtoe)&quot;
iSupResRefCapacity(allCy,SUPOTH,YTIME)            &quot;Supplementary Parameter for the residual in refineries Capacity (1)&quot;
iTransfInputRef(allCy,EF,YTIME)                   &quot;Transformation Input in Refineries (Mtoe)&quot;
iTotEneBranchCons(allCy,EF,YTIME)                 &quot;Total Energy Branch Consumption (Mtoe)&quot;
iTransfOutputRef(allCy,EF,YTIME)                  &quot;Transformation Output from Refineries (Mtoe)&quot;
iRefCapacity(allCy,YTIME)                         &quot;Refineries Capacity (Million Barrels/day)&quot;
iGrosInlCons(allCy,EF,YTIME)                      &quot;Gross Inland Consumtpion (Mtoe)&quot;
iGrossInConsNoEneBra(allCy,EF,YTIME)              &quot;Gross Inland Consumption,excluding energy branch (Mtoe)&quot;
iFeedTransfr(allCy,EFS,YTIME)                     &quot;Feedstocks in Transfers (Mtoe)&quot;
iFuelPriPro(allCy,EF,YTIME)                       &quot;Fuel Primary Production (Mtoe)&quot;
iEffDHPlants(allCy,EF,YTIME)                      &quot;Efficiency of District Heating Plants (1)&quot;
iResRefCapacity(allCy,YTIME)                      &quot;Residual in Refineries Capacity (1)&quot;
iResTransfOutputRefineries(allCy,EF,YTIME)        &quot;Residual in Transformation Output from Refineries (Mtoe)&quot;
iRateEneBranCons(allCy,EF,YTIME)                  &quot;Rate of Energy Branch Consumption over total transformation output (1)&quot;
iRatePriProTotPriNeeds(allCy,EF,YTIME)            &quot;Rate of Primary Production in Total Primary Needs (1)&quot;   
iResHcNgOilPrProd(allCy,EF,YTIME)                 &quot;Residuals for Hard Coal, Natural Gas and Oil Primary Production (1)&quot;
iRatioImpFinElecDem(allCy,YTIME)                  &quot;Ratio of imports in final electricity demand (1)&quot;    
iElecImp(allCy,YTIME)                             &quot;Electricity Imports (1)&quot;
iInpTransfTherm(allCy,EFS,YTIME)                  &quot;Historic data of VMVInpTransfTherm (Transformation input to thermal power plants) (Mtoe)&quot;
;
iSupResRefCapacity(runCy,SUPOTH,YTIME) = 1;
iSupTrnasfOutputRefineries(runCy,EF,YTIME) = 1;
iParDHEfficiency(PGEFS,YTIME) = iParDHEffData(PGEFS) ;
iTransfInputRef(runCy,EFS,YTIME)$(not An(YTIME)) = iDataTotTransfInputRef(runCy,EFS,YTIME);
iTotEneBranchCons(runCy,EFS,YTIME) = iDataConsEneBranch(runCy,EFS,YTIME);
iTransfOutputRef(runCy,EFS,YTIME)$(not An(YTIME)) = iDataTransfOutputRef(runCy,EFS,YTIME);
iRefCapacity(runCy,YTIME)= iSuppRefCapacity(runCy,&quot;REF_CAP&quot;,YTIME);
iGrosInlCons(runCy,EFS,YTIME) = iDataGrossInlCons(runCy,EFS,YTIME);
iGrossInConsNoEneBra(runCy,EFS,YTIME) = iGrosInlCons(runCy,EFS,YTIME) + iTotEneBranchCons(runCy,EFS,YTIME)$EFtoEFA(EFS,&quot;LQD&quot;)
                                               - iTotEneBranchCons(runCy,EFS,YTIME)$(not EFtoEFA(EFS,&quot;LQD&quot;));
iFeedTransfr(runCy,EFS,YTIME) = iSuppTransfers(runCy,EFS,YTIME);
iFuelPriPro(runCy,PPRODEF,YTIME) = iSuppPrimProd(runCy,PPRODEF,YTIME);
iEffDHPlants(runCy,EFS,YTIME)$(ord(YTIME)&gt;(ordfirst-8))  = sum(PGEFS$sameas(EFS,PGEFS),iParDHEfficiency(PGEFS,&quot;2010&quot;));
iResRefCapacity(runCy,YTIME) = iSupResRefCapacity(runCy,&quot;REF_CAP_RES&quot;,YTIME);
iResTransfOutputRefineries(runCy,EFS,YTIME) = iSupTrnasfOutputRefineries(runCy,EFS,YTIME);
iRateEneBranCons(runCy,EFS,YTIME)= iSupRateEneBranCons(runCy,EFS,YTIME);
iRatePriProTotPriNeeds(runCy,PPRODEF,YTIME) = iSuppRatePrimProd(runCy,PPRODEF,YTIME);
iResHcNgOilPrProd(runCy,&quot;HCL&quot;,YTIME)$an(YTIME)   = iSupResRefCapacity(runCy,&quot;HCL_PPROD&quot;,YTIME);
iResHcNgOilPrProd(runCy,&quot;NGS&quot;,YTIME)$an(YTIME)   = iSupResRefCapacity(runCy,&quot;NGS_PPROD&quot;,YTIME);
iResHcNgOilPrProd(runCy,&quot;CRO&quot;,YTIME)$an(YTIME)   = iSupResRefCapacity(runCy,&quot;OIL_PPROD&quot;,YTIME);
iRatioImpFinElecDem(runCy,YTIME)$an(YTIME) = iElcNetImpShare(runCy,&quot;ELC_IMP&quot;,YTIME);
iElecImp(runCy,YTIME)=0;</code></pre>
<p><em>VARIABLE INITIALISATION</em></p>
<pre><code>VCapRef.L(runCy,YTIME) = 0.1;
VCapRef.FX(runCy,YTIME)$(not An(YTIME)) = iRefCapacity(runCy,YTIME);
VOutTransfRefSpec.L(runCy,EFS,YTIME) = 0.1;
VOutTransfRefSpec.FX(runCy,EFS,YTIME)$(EFtoEFA(EFS,&quot;LQD&quot;) $(not An(YTIME))) = iTransfOutputRef(runCy,EFS,YTIME);
VOutTransfRefSpec.FX(runCy,EFS,YTIME)$(not EFtoEFA(EFS,&quot;LQD&quot;)) = 0;
VConsGrssInlNotEneBranch.L(runCy,EFS,YTIME) = 0.1;
VConsGrssInlNotEneBranch.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iGrossInConsNoEneBra(runCy,EFS,YTIME);
VOutTransfTherm.FX(runCy,EFS,YTIME)$(not TOCTEF(EFS)) = 0;
VInputTransfRef.FX(runCy,&quot;CRO&quot;,YTIME)$(not An(YTIME)) = iTransfInputRef(runCy,&quot;CRO&quot;,YTIME);
VInputTransfRef.FX(runCy,EFS,YTIME)$(not sameas(&quot;CRO&quot;,EFS)) = 0;
VConsGrssInl.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iGrosInlCons(runCy,EFS,YTIME);
VTransfers.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iFeedTransfr(runCy,EFS,YTIME);
VProdPrimary.FX(runCy,PPRODEF,YTIME)$(not An(YTIME)) = iFuelPriPro(runCy,PPRODEF,YTIME);
VImp.FX(runCy,&quot;NGS&quot;,YTIME)$(not An(YTIME)) = iFuelImports(runCy,&quot;NGS&quot;,YTIME);
VImp.FX(runCy,EFS,YTIME)$(not IMPEF(EFS)) = 0;
VExp.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iFuelExprts(runCy,EFS,YTIME);
VExp.FX(runCy,&quot;NGS&quot;,YTIME)$(not An(YTIME)) = iFuelExprts(runCy,&quot;NGS&quot;,YTIME);
VExp.FX(runCy,EFS,YTIME)$(not IMPEF(EFS)) = 0;
VOutTransfDhp.FX(runCy,EFS,YTIME)$(not STEAM(EFS)) = 0;
VOutTransfNuclear.FX(runCy,EFS,YTIME)$(not sameas(&quot;ELC&quot;,EFS)) = 0;
VInpTransfNuclear.FX(runCy,EFS,YTIME)$(not sameas(&quot;NUC&quot;,EFS)) = 0;
VMVConsFiEneSec.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iTotEneBranchCons(runCy,EFS,YTIME);
VMVInpTransfTherm.FX(runCy,EFS,YTIME)$(not PGEF(EFS)) = 0;
VMVInpTransfTherm.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iInpTransfTherm(runCy,EFS,YTIME);
VMVConsFinEneCountry.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iFinEneCons(runCy,EFS,YTIME);
VMVLossesDistr.FX(runCy,EFS,YTIME)$(not An(YTIME)) = iDistrLosses(runCy,EFS,YTIME);</code></pre>
<blockquote>
<p><strong>Limitations</strong> There are no known limitations.</p>
</blockquote>
<h2 id="definitions">Definitions</h2>
<h3 id="objects">Objects</h3>
<table>
<caption>module-internal objects (A: legacy)</caption>
<colgroup>
<col style="width: 36%" />
<col style="width: 40%" />
<col style="width: 18%" />
<col style="width: 4%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;"> </th>
<th style="text-align: center;">Description</th>
<th style="text-align: center;">Unit</th>
<th style="text-align: center;">A</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">iDataConsEneBranch<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Data for Consumption of Energy
Branch</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iDataGrossInlCons<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Data for Gross Inland Conusmption</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iDataTotTransfInputRef<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Total Transformation Input in
Refineries</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iDataTransfOutputRef<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Data for Other transformation
output</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iEffDHPlants<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Efficiency of District Heating
Plants</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iElcNetImpShare<br />
(allCy, SUPOTH, YTIME)</td>
<td style="text-align: center;">Ratio of electricity imports in total
final demand</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iElecImp<br />
(allCy, YTIME)</td>
<td style="text-align: center;">Electricity Imports</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iFeedTransfr<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Feedstocks in Transfers</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iFuelPriPro<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Fuel Primary Production</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iGrosInlCons<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Gross Inland Consumtpion</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iGrossInConsNoEneBra<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Gross Inland Consumption,excluding
energy branch</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iInpTransfTherm<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Historic data of VMVInpTransfTherm
(Transformation input to thermal power plants)</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iNatGasPriProElst<br />
(allCy)</td>
<td style="text-align: center;">Natural Gas primary production
elasticity related to gross inland consumption</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iParDHEfficiency<br />
(PGEFS, YTIME)</td>
<td style="text-align: center;">Parameter of district heating Efficiency
for all years</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iPolDstrbtnLagCoeffPriOilPr<br />
(kpdl)</td>
<td style="text-align: center;">Polynomial Distribution Lag Coefficients
for primary oil production</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iPriceFuelsInt<br />
(WEF, YTIME)</td>
<td style="text-align: center;">International Fuel Prices</td>
<td style="text-align: center;"><span
class="math inline">\(\$2015/toe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iRateEneBranCons<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Rate of Energy Branch Consumption over
total transformation output</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iRatePriProTotPriNeeds<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Rate of Primary Production in Total
Primary Needs</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iRatioImpFinElecDem<br />
(allCy, YTIME)</td>
<td style="text-align: center;">Ratio of imports in final electricity
demand</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iRefCapacity<br />
(allCy, YTIME)</td>
<td style="text-align: center;">Refineries Capacity</td>
<td style="text-align: center;"><span class="math inline">\(10^6
Barrels/day\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iResHcNgOilPrProd<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Residuals for Hard Coal, Natural Gas and
Oil Primary Production</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iResRefCapacity<br />
(allCy, YTIME)</td>
<td style="text-align: center;">Residual in Refineries Capacity</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iResTransfOutputRefineries<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Residual in Transformation Output from
Refineries</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iSuppPrimProd<br />
(allCy, PPRODEF, YTIME)</td>
<td style="text-align: center;">Supplementary Parameter for Primary
Production</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iSuppRatePrimProd<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Supplementary Parameter for
iRatePrimProd</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iSuppRefCapacity<br />
(allCy, SUPOTH, YTIME)</td>
<td style="text-align: center;">Supplementary Parameter for the residual
in refineries Capacity</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iSuppTransfers<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Supplementary Parameter for
Transfers</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iSupRateEneBranCons<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Rate of Energy Branch Consumption over
total transformation output of iRateEneBranCons</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iSupResRefCapacity<br />
(allCy, SUPOTH, YTIME)</td>
<td style="text-align: center;">Supplementary Parameter for the residual
in refineries Capacity</td>
<td style="text-align: center;"><span
class="math inline">\(1\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iSupTrnasfOutputRefineries<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Supplementary parameter for the
transformation output from refineries</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iTotEneBranchCons<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Total Energy Branch Consumption</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">iTransfInputRef<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Transformation Input in Refineries</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">iTransfOutputRef<br />
(allCy, EF, YTIME)</td>
<td style="text-align: center;">Transformation Output from
Refineries</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">Q03ConsFiEneSec<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute energy branch final
consumption</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Q03ConsFinEneCountry<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute total final energy
consumption</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">Q03ConsFinNonEne<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute final non-energy
consumption</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Q03ImpNetEneBrnch<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute net imports</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">Q03InpTransfTherm<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute transformation input to power
plants</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">Q03LossesDistr<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute distribution losses</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">Q03TransfInputDHPlants<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute the transformation input to
distrcit heating plants</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QCapRef<br />
(allCy, YTIME)</td>
<td style="text-align: center;">Compute refineries capacity</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">QConsGrssInl<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute gross inland consumption</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QConsGrssInlNotEneBranch<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute gross inland consumption not
including consumption of energy branch</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">QExp<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute fake exports</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QImp<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute fake imports</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">QInpTotTransf<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute total transformation input</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QInpTransfNuclear<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute transformation input to nuclear
plants</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">QInputTransfRef<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute the transformation input to
refineries</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QOutTotTransf<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute total transformation output</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">QOutTransfDhp<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute the transformation output from
district heating plants</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QOutTransfNuclear<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute transformation output from
nuclear plants</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">QOutTransfRefSpec<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute the transformation output from
refineries</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QOutTransfTherm<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute transformation output from
thermal power plants</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">QProdPrimary<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute primary production</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">QTransfers<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Compute transfers</td>
<td style="text-align: center;"></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VCapRef<br />
(allCy, YTIME)</td>
<td style="text-align: center;">Refineries capacity</td>
<td style="text-align: center;"><span class="math inline">\(10^6
barrels/day\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VConsGrssInl<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Gross Inland Consumption</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VConsGrssInlNotEneBranch<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Gross Inland Consumption not including
consumption of energy branch</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VExp<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Exports fake</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VImp<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Fake Imports for all fuels except
natural gas</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VInpTotTransf<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Total transformation input</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VInpTransfNuclear<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation input to nuclear
plants</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VInputTransfRef<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation input to refineries</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VMVInpTransfTherm<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation input to thermal power
plants</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VMVTransfInputDHPlants<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation input to District Heating
Plants</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VOutTotTransf<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Total transformation output</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VOutTransfDhp<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation output from District
Heating Plants</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VOutTransfNuclear<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation output from nuclear
plants</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VOutTransfRefSpec<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation output from
refineries</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VOutTransfTherm<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transformation output from thermal power
stations</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="odd">
<td style="text-align: center;">VProdPrimary<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Primary Production</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
<tr class="even">
<td style="text-align: center;">VTransfers<br />
(allCy, EFS, YTIME)</td>
<td style="text-align: center;">Transfers</td>
<td style="text-align: center;"><span
class="math inline">\(Mtoe\)</span></td>
<td style="text-align: center;">x</td>
</tr>
</tbody>
</table>
<h3 id="sets">Sets</h3>
<table style="width:72%;">
<caption>sets in use</caption>
<colgroup>
<col style="width: 26%" />
<col style="width: 45%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;"> </th>
<th style="text-align: center;">description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">allCy</td>
<td style="text-align: center;">All Countries Used in the Model</td>
</tr>
<tr class="even">
<td style="text-align: center;">an(ytime)</td>
<td style="text-align: center;">Years for which the model is
running</td>
</tr>
<tr class="odd">
<td style="text-align: center;">CHP(EF)</td>
<td style="text-align: center;">CHP Plants</td>
</tr>
<tr class="even">
<td style="text-align: center;">CHPtoEF(EF, EF)</td>
<td style="text-align: center;">correspondence of CHP plant types to
fuels</td>
</tr>
<tr class="odd">
<td style="text-align: center;">DH(EF)</td>
<td style="text-align: center;">District Heating</td>
</tr>
<tr class="even">
<td style="text-align: center;">DHtoEF(EF, EF)</td>
<td style="text-align: center;">correspondence of district heating plant
types to fuels</td>
</tr>
<tr class="odd">
<td style="text-align: center;">DOMSE(DSBS)</td>
<td style="text-align: center;">Tertiary SubSectors</td>
</tr>
<tr class="even">
<td style="text-align: center;">DSBS(SBS)</td>
<td style="text-align: center;">All Demand Subsectors</td>
</tr>
<tr class="odd">
<td style="text-align: center;">EF</td>
<td style="text-align: center;">Energy Forms</td>
</tr>
<tr class="even">
<td style="text-align: center;">EFS(EF)</td>
<td style="text-align: center;">Energy Forms used in Supply Side</td>
</tr>
<tr class="odd">
<td style="text-align: center;">EFtoEFA(EF, EFA)</td>
<td style="text-align: center;">Energy Forms Aggregations (for summary
balance report)</td>
</tr>
<tr class="even">
<td style="text-align: center;">EFtoEFS(EF, EFS)</td>
<td style="text-align: center;">Fuel Aggregation for Supply Side</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ELCEF(EF)</td>
<td style="text-align: center;">Electricity</td>
</tr>
<tr class="even">
<td style="text-align: center;">H2EF(EF)</td>
<td style="text-align: center;">Hydrogen</td>
</tr>
<tr class="odd">
<td style="text-align: center;">H2SBS(SBS)</td>
<td style="text-align: center;">Final demand sectors consuming hydrogen
for energy purposes</td>
</tr>
<tr class="even">
<td style="text-align: center;">H2TECH</td>
<td style="text-align: center;">Hydrogen production technologies</td>
</tr>
<tr class="odd">
<td style="text-align: center;">IMPEF(EFS)</td>
<td style="text-align: center;">Fuels considered in Imports and
Exports</td>
</tr>
<tr class="even">
<td style="text-align: center;">INDDOM(DSBS)</td>
<td style="text-align: center;">Industry and Tertiary</td>
</tr>
<tr class="odd">
<td style="text-align: center;">kpdl</td>
<td style="text-align: center;">counter for Polynomial Distribution
Lag</td>
</tr>
<tr class="even">
<td style="text-align: center;">NENSE(DSBS)</td>
<td style="text-align: center;">Non Energy and Bunkers</td>
</tr>
<tr class="odd">
<td style="text-align: center;">PGALL</td>
<td style="text-align: center;">Power Generation Plant Types</td>
</tr>
<tr class="even">
<td style="text-align: center;">PGALLtoEF(PGALL, PGEF)</td>
<td style="text-align: center;">Correspondence between plants and energy
forms</td>
</tr>
<tr class="odd">
<td style="text-align: center;">PGEF(EFS)</td>
<td style="text-align: center;">Energy forms used for power
generation</td>
</tr>
<tr class="even">
<td style="text-align: center;">PGEFS(PGOTH)</td>
<td style="text-align: center;">Fuels used as Input to District
Heating</td>
</tr>
<tr class="odd">
<td style="text-align: center;">PGGEO(PGALL)</td>
<td style="text-align: center;">Geothermal Plants</td>
</tr>
<tr class="even">
<td style="text-align: center;">PGNUCL(PGALL)</td>
<td style="text-align: center;">Nuclear plants</td>
</tr>
<tr class="odd">
<td style="text-align: center;">PPRODEF(EFS)</td>
<td style="text-align: center;">Fuels considered in primary
production</td>
</tr>
<tr class="even">
<td style="text-align: center;">rc</td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">runCy(allCy)</td>
<td style="text-align: center;">Countries for which the model is
running</td>
</tr>
<tr class="even">
<td style="text-align: center;">runCyL(allCy)</td>
<td style="text-align: center;">Countries for which the model is running
(used in countries loop)</td>
</tr>
<tr class="odd">
<td style="text-align: center;">SBS(ALLSBS)</td>
<td style="text-align: center;">Model Subsectors</td>
</tr>
<tr class="even">
<td style="text-align: center;">SECTTECH(SBS, EF)</td>
<td style="text-align: center;">Link between Model Subsectors and
Fuels</td>
</tr>
<tr class="odd">
<td style="text-align: center;">STEAM(EFS)</td>
<td style="text-align: center;">Steam</td>
</tr>
<tr class="even">
<td style="text-align: center;">SUPOTH</td>
<td style="text-align: center;">Indicators related to supply side</td>
</tr>
<tr class="odd">
<td style="text-align: center;">TOCTEF(EFS)</td>
<td style="text-align: center;">Energy forms produced by power plants
and boilers</td>
</tr>
<tr class="even">
<td style="text-align: center;">TRANSE(DSBS)</td>
<td style="text-align: center;">All Transport Subsectors</td>
</tr>
<tr class="odd">
<td style="text-align: center;">WEF</td>
<td style="text-align: center;">Imported Energy Forms (affecting fuel
prices)</td>
</tr>
</tbody>
</table>
<h2 id="see-also">See Also</h2>
<p><a href="01_Transport.htm">01_Transport</a>, <a
href="02_Industry.htm">02_Industry</a>, <a
href="04_PowerGeneration.htm">04_PowerGeneration</a>, <a
href="05_Hydrogen.htm">05_Hydrogen</a></p>
<h2 id="references">References</h2>
<script>
window.onscroll = function() {myFunction()};

var navbar = document.getElementById("pagenav");
var sticky = navbar.offsetTop;

function myFunction() {
  var currentScrollPos = window.pageYOffset;
  if (window.pageYOffset >= sticky) {
    if (prevScrollpos > currentScrollPos) {
      document.getElementById("pagenav").style.top = "0";
      document.getElementById("pagenav").style.position = "fixed";
    } else {
      document.getElementById("pagenav").style.top = "-50px";
    }
  } else {
      document.getElementById("pagenav").style.position = "static";
  }
  prevScrollpos = currentScrollPos;
}
</script>
</body>
</html>
